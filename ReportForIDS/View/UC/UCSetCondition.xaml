<UserControl x:Class="ReportForIDS.UC.UCSetCondition"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"

             x:Name="ucSetCondition"
             d:DesignHeight="{StaticResource UCDesignHeight}"
             d:DesignWidth="{StaticResource UCDesignWidth}"
             Background="{StaticResource UCBackgroundColor}">

   <UserControl.Resources>
      <Style TargetType="materialDesign:Card" BasedOn="{StaticResource MaterialDesignPageCard}"></Style>
      <Style TargetType="Button" BasedOn="{StaticResource DarkBlueButton}">
         <Setter Property="Margin" Value="5" />
      </Style>
   </UserControl.Resources>

   <i:Interaction.Triggers>
      <i:EventTrigger EventName="Loaded">
         <i:InvokeCommandAction Command="{Binding LoadedCommand}"
                                CommandParameter="{Binding ElementName=ucGroupOption}">
         </i:InvokeCommandAction>
      </i:EventTrigger>
   </i:Interaction.Triggers>

   <materialDesign:Card Margin="5" Grid.Row="1">
      <Grid>
         <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="50" />
         </Grid.RowDefinitions>

         <!--Title-->
         <TextBlock Grid.Row="0" Margin="0 15 0 30" Text="SET CONDITIONS TO FILTER DATA" Style="{StaticResource TitleTextBlock}" />

         <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
               <ColumnDefinition Width="250" />
               <ColumnDefinition Width="2" />
               <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Grid  Grid.Column="0">
               <Grid.RowDefinitions>
                  <RowDefinition Height="auto" />
                  <RowDefinition />
                  <RowDefinition Height="50" />
               </Grid.RowDefinitions>

               <TextBlock Grid.Row="0" Margin="0 15 0 0" Text="Condition" Style="{StaticResource SubTitleTextBlock}" />

               <ScrollViewer VerticalAlignment="Center" Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                  <StackPanel>
                     <StackPanel.Resources>
                        <Style TargetType="TextBox" BasedOn="{StaticResource MyTextBox}">
                           <Setter Property="Margin" Value="20 10" />
                        </Style>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource MyComboBox}">
                           <Setter Property="Margin" Value="20 10" />
                        </Style>
                     </StackPanel.Resources>

                     <!--Title-->
                     <TextBox Grid.Column="0" materialDesign:HintAssist.Hint="Order" IsReadOnly="True" Text="{Binding InputConditionOrder, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />

                     <!--Field name-->
                     <ComboBox Grid.Column="0" materialDesign:HintAssist.Hint="Field name"
                                      SelectedItem="{Binding InputConditionField, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                      ItemsSource="{Binding ListFields, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" DisplayMemberPath="FieldName">
                     </ComboBox>

                     <!--Condition type-->
                     <ComboBox Grid.Column="0" materialDesign:HintAssist.Hint="Condition type"
                                      ItemsSource= "{Binding ListConditionType}"
                                      SelectedItem="{Binding InputConditionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                        <!--<ComboBox.ItemsSource>
                                    <x:Array Type="sys:String">
                                        <sys:String>Greater than</sys:String>
                                        <sys:String>Greater than or equal</sys:String>
                                        <sys:String>Less than</sys:String>
                                        <sys:String>Less than or equal</sys:String>
                                        <sys:String>Equal</sys:String>
                                        <sys:String>Not equal</sys:String>
                                        <sys:String>Contain</sys:String>
                                        <sys:String>Not contain</sys:String>
                                    </x:Array>
                                </ComboBox.ItemsSource>-->
                     </ComboBox>

                     <!--Value-->
                     <TextBox materialDesign:HintAssist.Hint="Value" Text="{Binding InputConditionValue, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                        <TextBox.InputBindings>
                           <KeyBinding Command="{Binding SaveCommand}" Key="Enter" />
                        </TextBox.InputBindings>
                     </TextBox>
                  </StackPanel>
               </ScrollViewer>

               <!--Button-->
               <Grid Grid.Row="2">
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition />
                     <ColumnDefinition />
                  </Grid.ColumnDefinitions>

                  <Button Grid.Column="0" Command="{Binding AddCommand}" Width="auto" ToolTip="Add new condition"
                                IsEnabled="{Binding BtnAddEnable, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                     <Grid Width="80">
                        <Grid.ColumnDefinitions>
                           <ColumnDefinition Width="auto" />
                           <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Add" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right"></TextBlock>
                        <materialDesign:PackIcon Grid.Column="0" Kind="Add" Width="25" Height="25" />
                     </Grid>
                  </Button>

                  <Button Grid.Column="1" Command="{Binding SaveCommand}" Width="auto" ToolTip="Delete this condition">
                     <Grid Width="80">
                        <Grid.ColumnDefinitions>
                           <ColumnDefinition />
                           <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="Save" VerticalAlignment="Center"></TextBlock>
                        <materialDesign:PackIcon Grid.Column="1" Kind="ContentSave" Width="25" Height="25" />
                     </Grid>
                  </Button>
               </Grid>
            </Grid>

            <Grid Grid.Column="1" Background="Black" Margin="01 50 0 0"></Grid>

            <Grid Grid.Column="2">
               <Grid.RowDefinitions>
                  <RowDefinition Height="auto" />
                  <RowDefinition />
               </Grid.RowDefinitions>

               <TextBlock Grid.Row="0" Grid.ColumnSpan="2" VerticalAlignment="Center" Text="List conditions" Style="{StaticResource SubTitleTextBlock}" />

               <!--List conditions-->
               <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                  <ListView ItemsSource="{Binding ListConditions, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  SelectedItem="{Binding ConditionSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  VerticalAlignment="Stretch" HorizontalAlignment="Stretch">

                     <ListView.ContextMenu>
                        <ContextMenu>
                           <MenuItem Header="Move to top" Command="{Binding MoveTopCommand}" />
                           <MenuItem Header="Move up" Command="{Binding MoveUpCommand}" />
                           <MenuItem Header="Move down" Command="{Binding MoveDownCommand}" />
                           <MenuItem Header="Move to bottom" Command="{Binding MoveBotCommand}" />
                           <Separator />
                           <MenuItem Header="Remove" Command="{Binding DeleteCommand}" />
                           <MenuItem Header="Remove all" Command="{Binding DeleteAllCommand}" />
                        </ContextMenu>
                     </ListView.ContextMenu>

                     <ListView.View>
                        <GridView>
                           <GridViewColumn Header="#" Width="80">
                              <GridViewColumn.CellTemplate>
                                 <DataTemplate>
                                    <TextBlock Foreground="Black" Text="{Binding Order, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="18 0 0 0"></TextBlock>
                                 </DataTemplate>
                              </GridViewColumn.CellTemplate>
                           </GridViewColumn>

                           <GridViewColumn Header="Field name">
                              <GridViewColumn.CellTemplate>
                                 <DataTemplate>
                                    <TextBlock Foreground="Black" Text="{Binding Field.FieldName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="18 0 0 0"></TextBlock>
                                 </DataTemplate>
                              </GridViewColumn.CellTemplate>
                           </GridViewColumn>

                           <GridViewColumn Header="Condition type">
                              <GridViewColumn.CellTemplate>
                                 <DataTemplate>
                                    <TextBlock Foreground="Black" Text="{Binding ConditionType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="18 0 0 0"></TextBlock>
                                 </DataTemplate>
                              </GridViewColumn.CellTemplate>
                           </GridViewColumn>

                           <GridViewColumn Header="Value">
                              <GridViewColumn.CellTemplate>
                                 <DataTemplate>
                                    <TextBlock Foreground="Black" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="18 0 0 0"></TextBlock>
                                 </DataTemplate>
                              </GridViewColumn.CellTemplate>
                           </GridViewColumn>
                        </GridView>
                     </ListView.View>
                  </ListView>
               </ScrollViewer>
               <!--<ScrollViewer Grid.Row="1" Grid.ColumnSpan="2" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Margin="10">
                        <ListView Style="{StaticResource StretchListView}"
                                  ItemsSource="{Binding ListConditions, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                  SelectedItem="{Binding ConditionSelected, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Move to top" Command="{Binding MoveTopCommand}" />
                                    <MenuItem Header="Move up" Command="{Binding MoveUpCommand}" />
                                    <MenuItem Header="Move down" Command="{Binding MoveDownCommand}" />
                                    <MenuItem Header="Move to bottom" Command="{Binding MoveBotCommand}" />
                                    <Separator />
                                    <MenuItem Header="Remove" Command="{Binding DeleteCommand}" />
                                    <MenuItem Header="Remove all" Command="{Binding DeleteAllCommand}" />
                                </ContextMenu>
                            </ListView.ContextMenu>

                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="#" Width="80" DisplayMemberBinding="{Binding Order}">
                                        -->
               <!--<GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Foreground="Black" Margin="0 0 0 0" Text="{Binding Order}"></TextBlock>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>-->
               <!--
                                    </GridViewColumn>

                                    <GridViewColumn Header="Field name" DisplayMemberBinding="{Binding Field.FieldName}">
                                        -->
               <!--<GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Foreground="Black" Margin="0 0 0 0" Text="{Binding Field.FieldName}"></TextBlock>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>-->
               <!--
                                    </GridViewColumn>

                                    <GridViewColumn Header="Condition type" DisplayMemberBinding="{Binding ConditionType}">
                                        -->
               <!--<GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Foreground="Black" Margin="0 0 0 0" Text="{Binding ConditionType}"></TextBlock>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>-->
               <!--
                                    </GridViewColumn>

                                    <GridViewColumn Header="Value" DisplayMemberBinding="{Binding Value}">
                                        -->
               <!--<GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Foreground="Black" Margin="0 0 0 0" Text="{Binding Value}"></TextBlock>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>-->
               <!--
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </ScrollViewer>-->
            </Grid>
         </Grid>

         <!--Button next and prev-->
         <StackPanel Orientation="Horizontal" Grid.Row="2" HorizontalAlignment="Right" Margin="10 0">
            <Button Command="{Binding PrevCommand}" Width="175" ToolTip="Back to previous step">
               <Grid Width="140">
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="auto" />
                     <ColumnDefinition />
                  </Grid.ColumnDefinitions>
                  <TextBlock Text="PREV" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right"></TextBlock>
                  <materialDesign:PackIcon Grid.Column="0" Kind="ArrowLeftCircle" Width="25" Height="25" />
               </Grid>
            </Button>
            <Button Command="{Binding NextCommand}" Width="175" ToolTip="Go to next step">
               <Grid Width="140">
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition />
                     <ColumnDefinition Width="auto" />
                  </Grid.ColumnDefinitions>
                  <TextBlock Grid.Column="0" Text="NEXT" VerticalAlignment="Center"></TextBlock>
                  <materialDesign:PackIcon Grid.Column="1" Kind="ArrowRightCircle" Width="25" Height="25" />
               </Grid>
            </Button>
         </StackPanel>
      </Grid>
   </materialDesign:Card>
</UserControl>